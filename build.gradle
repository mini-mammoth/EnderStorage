buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

//plugins {
//	id "com.matthewprenger.cursegradle" version "1.0.7"
//}

apply plugin: 'idea'
apply plugin: "net.minecraftforge.gradle"

version = modversion
group= "com.setycz.chickens"
archivesBaseName = "chickens"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

configurations {
    mod
}

minecraft {
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
//    mappings channel: 'stable', version: "60-1.15"
    mappings channel: 'snapshot', version: "20200318-1.15.1"

    runs {
        client {
            workingDirectory project.file('run').canonicalPath

            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'

            source sourceSets.main
        }

        server  {
            workingDirectory project.file('run').canonicalPath

            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'

            source sourceSets.main
        }

        data  {
            workingDirectory project.file('run').canonicalPath

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'theoneprobe', '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]

            source sourceSets.main
        }
    }

//    replace '@VERSION@', project.version
//    replace '@FORGEVERSION@', forgeversion
}

repositories {
    mavenCentral()
    maven { url "http://tehnut.info/maven" }
    maven { url = "http://chickenbones.net/maven/" }

    maven { url "http://dvs1.progwml6.com/files/maven" }
    // Fallback for JEI
    maven { url "https://modmaven.k-4u.nl" }
    maven { // TOP
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${mcversion}-${forgeversion}"

    compile "codechicken:CodeChickenLib:1.12.2-${ccl_version}:deobf"
    compileOnly fg.deobf("mezz.jei:jei-${mcversion}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mcversion}:${jei_version}")
}

//processResources
//        {
//            inputs.property "version", project.version
//            inputs.property "mcversion", project.minecraft.version
//
//            from(sourceSets.main.resources.srcDirs) {
//                include 'mcmod.info'
//
//                expand 'version': project.version, 'mcversion': project.minecraft.version
//            }
//
//            from(sourceSets.main.resources.srcDirs) {
//                exclude 'mcmod.info'
//            }
//        }

//curseforge {
//    apiKey = project.hasProperty('curse_token') ? project.getProperty('curse_token') : ''
//    project {
//        id = project.hasProperty('curse_project_id') ? project.getProperty('curse_project_id') : ''
//        changelog = file('changelog.txt')
//        releaseType = project.releaseType
//        addGameVersion "${mcversion}"
//        relations {
//            optionalLibrary 'hwyla'
//            optionalLibrary 'just-enough-items-jei'
//        }
//    }
//}